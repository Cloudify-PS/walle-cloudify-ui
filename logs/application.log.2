[2014-02-18 16:55:21.536] [INFO] console - STATUS: 200
[2014-02-18 16:55:21.537] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:55:24.542] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503/nodes',
    method: 'GET' } ]
[2014-02-18 16:55:24.984] [INFO] console - STATUS: 200
[2014-02-18 16:55:24.985] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:55:27.993] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503/nodes',
    method: 'GET' } ]
[2014-02-18 16:55:28.451] [INFO] console - STATUS: 200
[2014-02-18 16:55:28.451] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:55:31.459] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503/nodes',
    method: 'GET' } ]
[2014-02-18 16:55:31.880] [INFO] console - STATUS: 200
[2014-02-18 16:55:31.881] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:55:34.885] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503/nodes',
    method: 'GET' } ]
[2014-02-18 16:55:35.324] [INFO] console - STATUS: 200
[2014-02-18 16:55:35.324] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:55:38.329] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503/nodes',
    method: 'GET' } ]
[2014-02-18 16:55:38.798] [INFO] console - STATUS: 200
[2014-02-18 16:55:38.799] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:55:41.805] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503/nodes',
    method: 'GET' } ]
[2014-02-18 16:55:42.265] [INFO] console - STATUS: 200
[2014-02-18 16:55:42.265] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:55:45.271] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503/nodes',
    method: 'GET' } ]
[2014-02-18 16:55:45.696] [INFO] console - STATUS: 200
[2014-02-18 16:55:45.699] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:55:48.704] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503/nodes',
    method: 'GET' } ]
[2014-02-18 16:55:49.128] [INFO] console - STATUS: 200
[2014-02-18 16:55:49.133] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:55:52.137] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503/nodes',
    method: 'GET' } ]
[2014-02-18 16:55:52.595] [INFO] console - STATUS: 200
[2014-02-18 16:55:52.595] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:55:55.598] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503/nodes',
    method: 'GET' } ]
[2014-02-18 16:55:56.028] [INFO] console - STATUS: 200
[2014-02-18 16:55:56.029] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:55:59.038] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503/nodes',
    method: 'GET' } ]
[2014-02-18 16:55:59.465] [INFO] console - STATUS: 200
[2014-02-18 16:55:59.466] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:56:02.471] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503/nodes',
    method: 'GET' } ]
[2014-02-18 16:56:02.908] [INFO] console - STATUS: 200
[2014-02-18 16:56:02.909] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:56:05.914] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503/nodes',
    method: 'GET' } ]
[2014-02-18 16:56:06.340] [INFO] console - STATUS: 200
[2014-02-18 16:56:06.341] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:56:09.345] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503/nodes',
    method: 'GET' } ]
[2014-02-18 16:56:09.791] [INFO] console - STATUS: 200
[2014-02-18 16:56:09.791] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:56:12.796] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503/nodes',
    method: 'GET' } ]
[2014-02-18 16:56:13.227] [INFO] console - STATUS: 200
[2014-02-18 16:56:13.227] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:56:16.233] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503/nodes',
    method: 'GET' } ]
[2014-02-18 16:56:16.654] [INFO] console - STATUS: 200
[2014-02-18 16:56:16.654] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:56:19.659] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503/nodes',
    method: 'GET' } ]
[2014-02-18 16:56:20.085] [INFO] console - STATUS: 200
[2014-02-18 16:56:20.086] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:56:23.090] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503/nodes',
    method: 'GET' } ]
[2014-02-18 16:56:23.514] [INFO] console - STATUS: 200
[2014-02-18 16:56:23.514] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:56:26.518] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503/nodes',
    method: 'GET' } ]
[2014-02-18 16:56:27.038] [INFO] console - STATUS: 200
[2014-02-18 16:56:27.039] [INFO] server - [ 'Request done, data: ',
  '{"deploymentId": "7435c222-9c6c-44b2-9508-ea9a466eb503", "nodes": [{"reachable": null, "id": "http_web_server_fc978"}, {"reachable": null, "id": "vm_6b85e"}]}' ]
[2014-02-18 16:56:27.558] [INFO] server - [ 'dispatching request ',
  { hostname: '15.185.216.244',
    port: '8100',
    path: '/deployments/7435c222-9c6c-44b2-9508-ea9a466eb503',
    method: 'GET' } ]
[2014-02-18 16:56:27.999] [INFO] console - STATUS: 200
[2014-02-18 16:56:28.215] [INFO] server - [ 'Request done, data: ',
  '{"blueprintId": "hello_world", "plan": {"relationships": {"cloudify.relationships.depends_on": {"workflows": {"preconfigure": "define depends_on_preconfigure\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.preconfigure\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'source\'\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.preconfigure\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'target\'\\n", "postconfigure": "define depends_on_postconfigure\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.postconfigure\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'source\'\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.postconfigure\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'target\'\\n", "establish": "define depends_on_establish\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.establish\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'source\'\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.establish\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'target\'\\n", "unlink": "define depends_on_establish\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.unlink\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'source\'\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.unlink\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'target\'\\n"}, "target_interfaces": {"cloudify.interfaces.relationship_lifecycle": ["preconfigure", "postconfigure", "establish", "unlink"]}, "name": "cloudify.relationships.depends_on", "source_interfaces": {"cloudify.interfaces.relationship_lifecycle": ["preconfigure", "postconfigure", "establish", "unlink"]}}, "cloudify.relationships.contained_in": {"workflows": {"preconfigure": "define depends_on_preconfigure\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.preconfigure\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'source\'\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.preconfigure\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'target\'\\n", "postconfigure": "define depends_on_postconfigure\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.postconfigure\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'source\'\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.postconfigure\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'target\'\\n", "establish": "define depends_on_establish\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.establish\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'source\'\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.establish\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'target\'\\n", "unlink": "define depends_on_establish\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.unlink\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'source\'\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.unlink\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'target\'\\n"}, "target_interfaces": {"cloudify.interfaces.relationship_lifecycle": ["preconfigure", "postconfigure", "establish", "unlink"]}, "name": "cloudify.relationships.contained_in", "derived_from": "cloudify.relationships.depends_on", "source_interfaces": {"cloudify.interfaces.relationship_lifecycle": ["preconfigure", "postconfigure", "establish", "unlink"]}}, "cloudify.relationships.connected_to": {"workflows": {"preconfigure": "define depends_on_preconfigure\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.preconfigure\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'source\'\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.preconfigure\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'target\'\\n", "postconfigure": "define depends_on_postconfigure\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.postconfigure\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'source\'\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.postconfigure\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'target\'\\n", "establish": "define depends_on_establish\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.establish\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'source\'\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.establish\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'target\'\\n", "unlink": "define depends_on_establish\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.unlink\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'source\'\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.unlink\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'target\'\\n"}, "target_interfaces": {"cloudify.interfaces.relationship_lifecycle": ["preconfigure", "postconfigure", "establish", "unlink"]}, "name": "cloudify.relationships.connected_to", "derived_from": "cloudify.relationships.depends_on", "source_interfaces": {"cloudify.interfaces.relationship_lifecycle": ["preconfigure", "postconfigure", "establish", "unlink"]}}}, "name": "hello_world", "management_plugins_to_install": [], "workflows": {"install": "define install_deployment\\n\\n    start_deployment_worker\\n\\n    log message: \'processing nodes: ${plan.nodes}\'\\n    concurrent_iterator on: \'$plan.nodes\', to_f: \'node\', merge_type: \'ignore\'\\n        log message: \'processing node: ${f:node}\'\\n        iterator on: \'$f:node.relationships\', to_v: \'relationship\'\\n            log message: \'waiting for node: ${node.id} relationship: ${v:relationship}\'\\n            state action: \'wait\', node_id: \'${v:relationship.target_id}\', reachable: \'true\'\\n        unset \'v:relationship\'\\n\\n        event event: { \\"stage\\" => \\"Creating node\\" }\\n        log message: \'executing create workflow for node: ${node.id}\'\\n        set \'v:create\': \\"$f:node.workflows.create\\"\\n        create\\n        unset \'v:create\'\\n\\n        execute_relationships_workflow workflow: \'preconfigure\'\\n\\n        event event: { \\"stage\\" => \\"Configuring node\\" }\\n        log message: \'executing configure workflow for node: ${node.id}\'\\n        set \'v:configure\': \\"$f:node.workflows.configure\\"\\n        configure\\n        unset \'v:configure\'\\n\\n        execute_relationships_workflow workflow: \'postconfigure\'\\n\\n        event event: { \\"stage\\" => \\"Starting node\\" }\\n        log message: \'executing start workflow for node: ${node.id}\'\\n        set \'v:start\': \\"$f:node.workflows.start\\"\\n        start\\n        unset \'v:start\'\\n\\n        state node_id: \'${node.id}\', reachable: \'true\'\\n\\n        execute_relationships_workflow workflow: \'establish\'\\n", "uninstall": "define uninstall_deployment\\n    log message: \'uninstalling nodes: ${plan.nodes}\'\\n    concurrent_iterator on: \'$plan.nodes\', to_f: \'node\', merge_type: \'ignore\'\\n        log message: \'processing node: ${node.id}\'\\n        # wait for all dependents to be uninstalled first\\n        iterator on: \'$f:node.dependents\', to_v: \'dependent\'\\n            log message: \'waiting for node: ${node.id} dependent: ${v:dependent}\'\\n            state action: \'wait\', node_id: \'${v:dependent}\', reachable: \'false\'\\n        unset \'v:dependent\'\\n\\n        state action: \'get\', node_id: \'${node.id}\', to_f: \'node_reachable\'\\n        log message: \'node reachable state is: ${node_reachable}\'\\n        # we only call uninstall on reachable nodes\\n        sequence if: \'${node_reachable} == true\'\\n            event event: { \\"stage\\" => \\"Stopping node\\" }\\n            log message: \'executing stop workflow for node: ${node.id}\'\\n\\n            # \'stop\' is a Ruote reserved word so therefore \'_stop\'\\n            set \'v:_stop\': \\"$f:node.workflows.stop\\"\\n            _stop\\n            unset \'v:_stop\'\\n\\n            execute_relationships_workflow workflow: \'unlink\'\\n\\n            event event: { \\"stage\\" => \\"Deleting node\\" }\\n            log message: \'executing delete workflow for node: ${node.id}\'\\n            set \'v:delete\': \\"$f:node.workflows.delete\\"\\n            delete\\n            unset \'v:delete\'\\n\\n            state action: \'wait\', node_id: \'${node.id}\', reachable: \'false\'\\n\\n"}, "is_management_plugins_to_install": false, "nodes": [{"operations": {}, "relationships": [{"source_operations": {}, "target_operations": {}, "source_interfaces": {"cloudify.interfaces.relationship_lifecycle": ["preconfigure", "postconfigure", "establish", "unlink"]}, "target_interfaces": {"cloudify.interfaces.relationship_lifecycle": ["preconfigure", "postconfigure", "establish", "unlink"]}, "target_id": "vm_6b85e", "state": "reachable", "workflows": {"preconfigure": "define depends_on_preconfigure\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.preconfigure\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'source\'\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.preconfigure\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'target\'\\n", "postconfigure": "define depends_on_postconfigure\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.postconfigure\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'source\'\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.postconfigure\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'target\'\\n", "establish": "define depends_on_establish\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.establish\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'source\'\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.establish\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'target\'\\n", "unlink": "define depends_on_establish\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.unlink\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'source\'\\n    execute_operation operation: \'cloudify.interfaces.relationship_lifecycle.unlink\',\\n                      relationship: \'$v:relationship\',\\n                      run_on_node: \'target\'\\n"}, "type": "cloudify.relationships.contained_in"}], "declared_type": "cloudify.types.web_server", "name": "http_web_server", "workflows": {"start": "define node_start\\n    execute_operation operation: \'cloudify.interfaces.lifecycle.start\'\\n", "create": "define node_create\\n    execute_operation operation: \'cloudify.interfaces.lifecycle.create\'\\n", "stop": "define node_stop\\n    execute_operation operation: \'cloudify.interfaces.lifecycle.stop\'", "configure": "define node_configure\\n    execute_operation operation: \'cloudify.interfaces.lifecycle.configure\'", "delete": "define node_delete\\n    execute_operation operation: \'cloudify.interfaces.lifecycle.delete\'"}, "properties": {"port": 8080, "cloudify_runtime": {}}, "instances": {"deploy": 1}, "plugins": {}, "host_id": "vm_6b85e", "type": "cloudify.types.web_server", "id": "http_web_server_fc978"}, {"operations": {"cloudify.interfaces.worker_installer.start": {"operation": "tasks.start", "plugin": "worker_installer"}, "get": {"operation": "tasks.get", "plugin": "kv_store"}, "cloudify.interfaces.worker_installer.restart": {"operation": "tasks.restart", "plugin": "worker_installer"}, "put": {"operation": "tasks.put", "plugin": "kv_store"}, "cloudify.interfaces.worker_installer.install": {"operation": "tasks.install", "plugin": "worker_installer"}, "cloudify.interfaces.kv_store.get": {"operation": "tasks.get", "plugin": "kv_store"}, "cloudify.interfaces.plugin_installer.install": {"operation": "tasks.install", "plugin": "plugin_installer"}, "cloudify.interfaces.kv_store.put": {"operation": "tasks.put", "plugin": "kv_store"}, "start": {"operation": "tasks.start", "plugin": "worker_installer"}, "restart": {"operation": "tasks.restart", "plugin": "worker_installer"}}, "declared_type": "cloudify.types.host", "name": "vm", "plugins_to_install": [], "workflows": {"start": "define host_start\\n    execute_operation operation: \'cloudify.interfaces.lifecycle.start\'\\n    sequence if: \'${node.properties.install_agent} == true\'\\n        event event: { \\"stage\\" => \\"Verifying host has started\\" }\\n        state action: \'wait\', node_id: \'${node.id}\', reachable: \'true\'\\n        log message: \'installing agent on host: ${node.id}\'\\n        event event: { \\"stage\\" => \\"Installing worker\\" }\\n        execute_operation operation: \'cloudify.interfaces.worker_installer.install\'\\n        execute_operation operation: \'cloudify.interfaces.worker_installer.start\'\\n        event event: { \\"stage\\" => \\"Installing plugins\\" }\\n        log message: \'installing plugins on host: ${node.id} - plugins: ${node.plugins_to_install}\'\\n        iterator on: \'$node.plugins_to_install\', to_v: \'plugin\'\\n            log message: \'installing plugin: ${v:plugin.name} on host: ${node.id}\'\\n            event event: { \\"stage\\" => \\"Installing plugin ${v:plugin.name}\\" }\\n            execute_operation operation: \'cloudify.interfaces.plugin_installer.install\', params: {\\n                plugin: {\\n                    name: \'${v:plugin.name}\',\\n                    url: \'${v:plugin.url}\'\\n                 }\\n            }\\n            log message: \'successfully installed plugin: ${v:plugin.name} on host: ${node.id}\'\\n        log message: \'restarting worker on host: ${node.id}\'\\n        execute_operation operation: \'cloudify.interfaces.worker_installer.restart\'\\n        execute_operation operation: \'cloudify.interfaces.kv_store.put\', params: {\\n            key: \\"agent plugins installed\\",\\n            value: true\\n        }\\n\\n", "create": "define node_create\\n    execute_operation operation: \'cloudify.interfaces.lifecycle.create\'\\n", "stop": "define node_stop\\n    execute_operation operation: \'cloudify.interfaces.lifecycle.stop\'", "configure": "define node_configure\\n    execute_operation operation: \'cloudify.interfaces.lifecycle.configure\'", "delete": "define node_delete\\n    execute_operation operation: \'cloudify.interfaces.lifecycle.delete\'"}, "properties": {"install_agent": false, "cloudify_runtime": {}}, "instances": {"deploy": 1}, "management_plugins_to_install": [], "plugins": {"plugin_installer": {"url": "cloudify/poc/plugins/celery-worker-plugin-installer.zip", "agent_plugin": "true", "name": "plugin_installer", "manager_plugin": "false"}, "kv_store": {"url": "cloudify/poc/plugins/kv_store.zip", "agent_plugin": "true", "name": "kv_store", "manager_plugin": "false"}, "worker_installer": {"url": "cloudify/poc/plugins/celery-worker-installer.zip", "agent_plugin": "false", "name": "worker_installer", "manager_plugin": "false"}}, "host_id": "vm_6b85e", "dependents": ["http_web_server_fc978"], "type": "cloudify.types.host", "id": "vm_6b85e"}]}, "id": "7435c222-9c6c-44b2-9508-ea9a466eb503", "createdAt": "2014-02-18 12:57:52.744182", "updatedAt": "2014-02-18 12:57:52.744182"}' ]
